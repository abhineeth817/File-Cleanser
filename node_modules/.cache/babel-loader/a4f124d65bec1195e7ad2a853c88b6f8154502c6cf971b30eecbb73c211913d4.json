{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivadev mk\\\\OneDrive\\\\Desktop\\\\optive\\\\File-cleansing\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    const form = new FormData();\n    form.append('file', file);\n    try {\n      const res = await fetch('/api/upload', {\n        method: 'POST',\n        body: form\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResults(data);\n      } else {\n        alert(data.error || 'Server returned an error');\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Upload failed: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4 text-slate-800\",\n      children: \"File Cleansing & Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-slate-600\",\n      children: \"Upload a file (PDF, Word, Excel, Image, PPT, or Text). The system will cleanse PII and analyze for security-related insights.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.png,.jpg,.jpeg,.bmp,.tiff,.pptx,.xlsx,.xlsm,.xltx,.txt,.csv\",\n        onChange: e => setFile(e.target.files[0]),\n        className: \"block w-full text-sm text-slate-700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-5 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-medium disabled:opacity-50\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Upload & Run'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), Object.keys(results).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-slate-500\",\n        children: \"No files processed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 49\n      }, this), Object.keys(results).map(filename => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-4 bg-white rounded-xl shadow border\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold text-slate-700\",\n          children: filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-slate-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Original (sample):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 58\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block whitespace-pre-wrap\",\n            children: results[filename].original_text_sample\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-slate-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cleansed (sample):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 58\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block whitespace-pre-wrap\",\n            children: results[filename].cleansed_text_sample\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-slate-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 58\n          }, this), \" \", JSON.stringify(results[filename].analysis)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, filename, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dfT83kGuJPbu7V3JhgfyVR9kXeY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","file","setFile","results","setResults","loading","setLoading","handleSubmit","e","preventDefault","form","FormData","append","res","fetch","method","body","data","json","ok","alert","error","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","target","files","disabled","Object","keys","length","map","filename","original_text_sample","cleansed_text_sample","JSON","stringify","analysis","_c","$RefreshReg$"],"sources":["C:/Users/shivadev mk/OneDrive/Desktop/optive/File-cleansing/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function App() {\r\n  const [file, setFile] = useState(null);\r\n  const [results, setResults] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n    setLoading(true);\r\n    const form = new FormData();\r\n    form.append('file', file);\r\n    try {\r\n      const res = await fetch('/api/upload', { method: 'POST', body: form });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setResults(data);\r\n      } else {\r\n        alert(data.error || 'Server returned an error');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Upload failed: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-4 text-slate-800\">File Cleansing & Analysis</h1>\r\n      <p className=\"mb-4 text-slate-600\">\r\n        Upload a file (PDF, Word, Excel, Image, PPT, or Text). The system will cleanse PII and analyze for security-related insights.\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.png,.jpg,.jpeg,.bmp,.tiff,.pptx,.xlsx,.xlsm,.xltx,.txt,.csv\"\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n          className=\"block w-full text-sm text-slate-700\"\r\n        />\r\n\r\n        <button\r\n          className=\"px-5 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-medium disabled:opacity-50\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Processing...' : 'Upload & Run'}\r\n        </button>\r\n      </form>\r\n\r\n      {results && (\r\n        <div className=\"mt-8\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">Results</h2>\r\n          {Object.keys(results).length === 0 && <p className=\"text-sm text-slate-500\">No files processed.</p>}\r\n          {Object.keys(results).map((filename) => (\r\n            <div key={filename} className=\"mb-4 p-4 bg-white rounded-xl shadow border\">\r\n              <h3 className=\"font-bold text-slate-700\">{filename}</h3>\r\n              <p className=\"mt-2 text-sm text-slate-600\"><strong>Original (sample):</strong> <span className=\"block whitespace-pre-wrap\">{results[filename].original_text_sample}</span></p>\r\n              <p className=\"mt-1 text-sm text-slate-600\"><strong>Cleansed (sample):</strong> <span className=\"block whitespace-pre-wrap\">{results[filename].cleansed_text_sample}</span></p>\r\n              <p className=\"mt-1 text-sm text-slate-600\"><strong>Analysis:</strong> {JSON.stringify(results[filename].analysis)}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}